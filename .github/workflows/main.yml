# .github/workflows/ci.yml

name: CI – Tests & Build Docker

on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  backend-tests:
    name: Backend – Lint, Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Backend Dependencies
        working-directory: subly-back
        run: npm ci

      # – Lint si besoin
      #- name: Lint Backend (ESLint)
      #  working-directory: subly-back
      #  run: npm run lint

      - name: Run Backend Tests (Jest)
        working-directory: subly-back
        run: npm run test

      - name: Build Backend (TypeScript → JavaScript)
        working-directory: subly-back
        run: npm run build

  frontend-tests:
    name: Frontend – Test Only (Jest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: subly-front
        run: npm ci

      # On retire le lint en CI pour éviter le problème ESM
      #- name: Lint Frontend (ESLint)
      #  working-directory: subly-front
      #  run: npm run lint

      - name: Run Frontend Tests (Jest)
        working-directory: subly-front
        run: npm run test

  docker-build:
    name: Build & Push Docker Image (Backend)
    runs-on: ubuntu-latest
    needs: backend-tests
    # Ce job ne dépend que de backend-tests, pas frontend-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js (facultatif)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Build production Docker image
        working-directory: subly-back
        run: |
          # Force le propriétaire du repo en minuscules
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker build \
            --tag ghcr.io/$OWNER/subly-backend:${{ github.sha }} \
            --tag ghcr.io/$OWNER/subly-backend:latest \
            .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Docker image to GHCR
        working-directory: subly-back
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/$OWNER/subly-backend:${{ github.sha }}
          docker push ghcr.io/$OWNER/subly-backend:latest
